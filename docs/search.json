[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the [group name] project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to https://[your-project-url].\nSummary\n[provide a biref summary of your project]\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello! My name is Anil Solakoglu.\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\nThis is our template.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "I am a 4rd year student of Industrial Engineering at Hacettepe University. Additionally, I am a graduate of Hacettepe University, Department of Electricity. I received theoretical training in Project Management, System and Process Development, Data & Business Analysis and Production Planning and provided the necessary foundation for internship and I continue my research on these subjects. I am very enthusiastic and willing to work in the internship program in order to experience real applications in the business world and to find answers to the questions in my mind, together with the skill and knowledge I have gained in these subjects. —\n\nEducation\n\nHacettepe University Industrial Engineering 2.64/4.00 (15.09.2019-17.06.2024 ) Ankara, Turkey\nHacettepe University Programme of Electricity 3.00/4.00 (5.09.2016 - 10.09.2018 ) Ankara, Turkey\n\n\n\nWork Experience\n\nFNSS Defence Systems Inc. (10.07.2023-4.08.2023) Supply Chain Management - Internship\nGeneral Directorate of State Airports Authority (DHMİ) (18.10.2017-15.01.2018) Electrical and Electronic Maintenance- Internship\nElectricity Generation Company (EÜAŞ) (12.06.2017-28.08.2017) Electrical and Electronic Maintenance- Internship\n\n\n\nProjects\n\n\nCompetencies\nR, Quarto, Git, Python , MS Excel , Solidwork , MySQL , MS Word , Power BI\n\n\nHobbies\n• Watching Movies and Series • Camping • Swimming • Listen to music • Research • Chess • PC Games • Hiking • Cooking/Making coffee\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nFirm xxx, position xx, year xxx\nFirm yyy, position yyy, year yyy"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nFirm aaa, position xx, year xxx\nFirm bbb, position yyy, year yyy"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has four parts.\n\n\nin your Quarto document: - RStudio Global 2022 conference talks - Posit YouTube channel playlist - Any R-related video from the web or YouTube that you find interesting\nTHE VIDEO I SELECTED AND ITS LINK ARE MENTIONED BELOW ZJ | Easy larger-than-RAM data manipulation with {disk.frame} | RStudio https://youtu.be/EOjObl_GSi4?list=PL9HYL-VRX0oTOK4cpbCbRk15K2roEgzVW\nSUMMARY:The main topic in the video is easy big data manipulation with “disc.frame”. The reason we need this operation is that when we are dealing with large data and R tries to load the data, the data is transferred to RAM. If the data size is larger than RAM can store, we get the error “Cannot allocate vectors of size”. Basically, to solve this problem, we break the whole data set into smaller chunks without loading it into memory. ‘’Disk.frame’’ is a folder containing many ‘’fst’’ files. We convert the data to disc.frame by specifying the path to the CSV file with the function ‘’csv_to_disk.frame(path_to_cvs_file1, path_to_cvs_file2,..)’’. We use dplyr verbs to process the data directly. With the srckeep function we specify which columns are loaded into memory, and with the filter, mutate, group, summarise and collect commands we have the possibility to collect the data we want from large data files.\n\n\n\n\n\nR uses curly braces and parentheses. For example, if you want to use a for loop or an if statement, you must enclose the statement in parentheses and then open the curly braces to run the code.\n{r} for (i in 1:5){ print(“code block 1”) if (i &gt; 3) { print(“code block 2”) } print(“code block 1 again”) }\nPython on the other hand uses indentation and columns. The same R code would look like this:\nfor i in range(5): print(“code block 1”) if i &gt; 3: print(“code block 2”) print(“code block 1 again”)\nwhere the indentation is very important as the different indentation levels refer to different execution levels that is a loop or an if statement only affect the indented code not the non- indented code.\n\n\n\nR: Operation can be spread on multiple rows {r} 2 + 3 + 4\noutput: [1] 9\nPython: Operation on multiple rows must be declered either usıng  and ()\n2 + 3 +\n4\nOutput:9\nor\n(2 + 3 + 4)\nOutput:9\n\n\n\nR: Index start’s at 1 , includes last element In R indexing starts at one and ends with the last element in the sequence included.\n{r} for (i in 1:10) { print(i) }\nOutput: [1] 1 [1] 2 [1] 3 [1] 4 [1] 5 [1] 6 [1] 7 [1] 8 [1] 9 [1] 10\nPython: Index start’s at 0 , doesn’t include last element In Python indexing starts at zero and ends without the last element number four functions i\nfor i in range(10) print(i)\nOutput: 0 1 2 3 4 5 6 7 8 9\n\n\n\n\npackage ‘dslabs’ successfully unpacked and MD5 sums checked  The downloaded binary packages are in  C:\\Users\\Monster\\AppData\\Local\\Temp\\RtmpUB0tuU\\downloaded_packages \n\n&gt; library(dslabs)\n&gt; data(\"na_example\") \n&gt; cat(\"Original na_example dataset:\\n\") \n\nOriginal na_example dataset: \n&gt; print(na_example)    \n\n[1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2   [23]  2  1  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4   [45]  1  1  2  1  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA   [67]  1 NA  4  1  2  2  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1   [89]  3  1 NA  3  1  2  2  1  2  2  1  1  4  1  1  2  3  3  2  2  3  3  [111]  3  4  1  1  1  2 NA  4  3  4  3  1  2  1 NA NA NA NA  1  5  1  2  [133]  1  3  5  3  2  2 NA NA NA NA  3  5  3  1  1  4  2  4  3  3 NA  2  [155]  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA NA  2  4 NA  2  5  1  4  [177]  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5  2  2  2  3  1  2  [199]  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2  2  1  3  2  [221]  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4 NA  3  [243] NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2  [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1  [287] NA  2  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  [309]  1 NA  2  3  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  [331]  2  1  1  1  3  2  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  [353]  3  2  3  4  1  4  3  1 NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  [375]  3  4  2  1  1  4  2  1  1  1  1  2  1  4  4  1  3 NA  3  3 NA  2  [397] NA  1  2  1  1  4  2  1  4  4 NA  1  2 NA  3  2  2  2  1  4  3  6  [419]  1  2  3  1  3  2  2  2  1  1  3  2  1  1  1  3  2  2 NA  4  4  4  [441]  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3  2  1  4  3 NA  1  [463]  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3  1  2  2  2  [485]  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2 NA  1  [507]  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1  [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  [551]  1  2 NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  [573]  1  5  2 NA  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  [595]  1  2  2  4 NA  6  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  [617]  2 NA  4 NA  1  1  2  2  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  [639]  3  1 NA  1  1  1  1  3  2  4  2  2  3 NA NA  1  4  3  2  2  2  3  [661]  2  4  2  2  4 NA NA NA  6  3  3  1  4  4  2  1 NA  1  6 NA  3  3  [683]  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4  1  3  1  2 NA  1  1  3  [705]  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4  2  2  2  2  4 NA  [727]  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4 NA NA NA NA  [749]  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3  1  2  [771]  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3  [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  [815]  1  5  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  [837]  2 NA  2  1  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2  [859] NA  2  1  3  1  3  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  [881]  2  1  3  2  4  2 NA  3  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  [903]  4  3  2 NA  3  2 NA  1 NA  3  2  1  1  1  2 NA  2  2  3  3  2 NA  [925] NA  4  5  2  2  2  1  2  3  1  3  3  4  3 NA  1  1  1 NA  4  3  5  [947]  1  1  2 NA  2  2  2  2  5  2  2  3  1  2  3 NA  1  2 NA NA  2 NA  [969]  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1  2  4  3  3  3 NA  [991]  1  1  2  2  1  1  2  2 NA  2 \n\n&gt; cat(\"\\nNumber of NAs in the original dataset: \", sum(is.na(na_example)), \"\\n\") \"CHATGPT\"\n\nNumber of NAs in the original dataset:  145 \n\n&gt; na_example_no_na &lt;- na_example &gt; na_example_no_na[is.na(na_example_no_na)] &lt;- 0 \"CHATGPT\"\n\n&gt; cat(\"\\nModified na_example dataset (NAs replaced with 0):\\n\")  \"CHATGPT\"\n\nModified na_example dataset (NAs replaced with 0):\n&gt; print(na_example_no_na)    \n\n[1] 2 1 3 2 1 3 1 4 3 2 2 0 2 2 1 4 0 1 1 2 1 2 2 1 2 5 0 2 2 3 1 2 4   [34] 1 1 1 4 5 2 3 4 1 2 4 1 1 2 1 5 0 0 0 1 1 5 1 3 1 0 4 4 7 3 2 0 0   [67] 1 0 4 1 2 2 3 2 1 2 2 4 3 4 2 3 1 3 2 1 1 1 3 1 0 3 1 2 2 1 2 2 1  [100] 1 4 1 1 2 3 3 2 2 3 3 3 4 1 1 1 2 0 4 3 4 3 1 2 1 0 0 0 0 1 5 1 2  [133] 1 3 5 3 2 2 0 0 0 0 3 5 3 1 1 4 2 4 3 3 0 2 3 2 6 0 1 1 2 2 1 3 1  [166] 1 5 0 0 2 4 0 2 5 1 4 3 3 0 4 3 1 4 1 1 3 1 1 0 0 3 5 2 2 2 3 1 2  [199] 2 3 2 1 0 2 0 1 0 0 2 1 1 0 3 0 1 2 2 1 3 2 2 1 1 2 3 1 1 1 4 3 4  [232] 2 2 1 4 1 0 5 1 4 0 3 0 0 1 1 5 2 3 3 2 4 0 3 2 5 0 2 3 4 6 2 2 2  [265] 0 2 0 2 0 3 3 2 2 4 3 1 4 2 0 2 4 0 6 2 3 1 0 2 2 0 1 1 3 2 3 3 1  [298] 0 1 4 2 1 1 3 2 1 2 3 1 0 2 3 3 2 1 2 3 5 5 1 2 3 3 1 0 0 1 2 4 0  [331] 2 1 1 1 3 2 1 1 3 4 0 1 2 1 1 3 3 0 1 1 3 5 3 2 3 4 1 4 3 1 0 2 1  [364] 2 2 1 2 2 6 1 2 4 5 0 3 4 2 1 1 4 2 1 1 1 1 2 1 4 4 1 3 0 3 3 0 2  [397] 0 1 2 1 1 4 2 1 4 4 0 1 2 0 3 2 2 2 1 4 3 6 1 2 3 1 3 2 2 2 1 1 3  [430] 2 1 1 1 3 2 2 0 4 4 4 1 1 0 4 3 0 1 3 1 3 2 4 2 2 2 3 2 1 4 3 0 1  [463] 4 3 1 3 2 0 3 0 1 3 1 4 1 1 1 2 4 3 1 2 2 2 3 2 3 1 1 0 3 2 1 1 2  [496] 0 2 2 2 3 3 1 1 2 0 1 2 1 1 3 3 1 3 1 1 1 1 1 2 5 1 1 2 2 1 1 0 1  [529] 4 1 2 4 1 3 2 0 1 1 0 2 1 1 4 2 3 3 1 5 3 1 1 2 0 1 1 3 1 3 2 4 0  [562] 2 3 2 1 2 1 1 1 2 2 3 1 5 2 0 2 0 3 2 2 2 1 5 3 2 3 1 0 3 1 2 2 2  [595] 1 2 2 4 0 6 1 2 0 1 1 2 2 3 0 3 2 3 3 4 2 0 2 0 4 0 1 1 2 2 3 1 1  [628] 1 3 0 2 5 0 7 1 0 4 3 3 1 0 1 1 1 1 3 2 4 2 2 3 0 0 1 4 3 2 2 2 3  [661] 2 4 2 2 4 0 0 0 6 3 3 1 4 4 2 1 0 1 6 0 3 3 2 1 1 6 0 1 5 1 0 2 6  [694] 2 0 4 1 3 1 2 0 1 1 3 1 2 4 2 1 3 2 4 3 2 2 1 1 5 6 4 2 2 2 2 4 0  [727] 1 2 2 2 2 4 5 0 0 0 4 3 3 3 2 4 2 4 0 0 0 0 2 1 0 2 4 3 2 0 2 3 1  [760] 3 4 0 1 2 1 2 0 3 1 2 1 2 1 2 1 2 2 2 2 1 1 3 3 1 3 4 3 0 0 4 2 3  [793] 2 1 3 2 4 2 2 3 1 2 4 3 3 4 0 1 4 2 1 1 1 3 1 5 2 2 4 2 0 1 3 1 2  [826] 0 1 2 1 2 1 0 1 3 2 3 2 0 2 1 4 2 0 0 0 2 4 2 0 0 3 1 0 5 5 2 2 2  [859] 0 2 1 3 1 3 2 4 2 4 0 4 1 2 3 2 3 3 2 3 2 2 2 1 3 2 4 2 0 3 3 2 2  [892] 0 0 3 2 1 2 4 1 1 1 1 4 3 2 0 3 2 0 1 0 3 2 1 1 1 2 0 2 2 3 3 2 0  [925] 0 4 5 2 2 2 1 2 3 1 3 3 4 3 0 1 1 1 0 4 3 5 1 1 2 0 2 2 2 2 5 2 2  [958] 3 1 2 3 0 1 2 0 0 2 0 3 1 1 2 5 3 5 1 1 4 0 2 1 3 1 1 2 4 3 3 3 0  [991] 1 1 2 2 1 1 2 2 0 2 \n\n&gt; cat(\"\\nNumber of NAs in the modified dataset: \", sum(is.na(na_example_no_na)), \"\\n\") \n\nNumber of NAs in the modified dataset:  0"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Fall 2023] EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on November 03, 2023\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-1.html#a-choose-a-video-from-one-of-the-following-sources-and-provide-a-brief-summary",
    "href": "assignments/assignment-1.html#a-choose-a-video-from-one-of-the-following-sources-and-provide-a-brief-summary",
    "title": "Assignment 1",
    "section": "",
    "text": "in your Quarto document: - RStudio Global 2022 conference talks - Posit YouTube channel playlist - Any R-related video from the web or YouTube that you find interesting\nTHE VIDEO I SELECTED AND ITS LINK ARE MENTIONED BELOW ZJ | Easy larger-than-RAM data manipulation with {disk.frame} | RStudio https://youtu.be/EOjObl_GSi4?list=PL9HYL-VRX0oTOK4cpbCbRk15K2roEgzVW\nSUMMARY:The main topic in the video is easy big data manipulation with “disc.frame”. The reason we need this operation is that when we are dealing with large data and R tries to load the data, the data is transferred to RAM. If the data size is larger than RAM can store, we get the error “Cannot allocate vectors of size”. Basically, to solve this problem, we break the whole data set into smaller chunks without loading it into memory. ‘’Disk.frame’’ is a folder containing many ‘’fst’’ files. We convert the data to disc.frame by specifying the path to the CSV file with the function ‘’csv_to_disk.frame(path_to_cvs_file1, path_to_cvs_file2,..)’’. We use dplyr verbs to process the data directly. With the srckeep function we specify which columns are loaded into memory, and with the filter, mutate, group, summarise and collect commands we have the possibility to collect the data we want from large data files."
  },
  {
    "objectID": "assignments/assignment-1.html#b-demonstrate-and-explain-three-differences-between-r-and-python-e.g.-coding-style-syntax-etc.-include-coding-examples-using-code-chunks.",
    "href": "assignments/assignment-1.html#b-demonstrate-and-explain-three-differences-between-r-and-python-e.g.-coding-style-syntax-etc.-include-coding-examples-using-code-chunks.",
    "title": "Assignment 1",
    "section": "",
    "text": "R uses curly braces and parentheses. For example, if you want to use a for loop or an if statement, you must enclose the statement in parentheses and then open the curly braces to run the code.\n{r} for (i in 1:5){ print(“code block 1”) if (i &gt; 3) { print(“code block 2”) } print(“code block 1 again”) }\nPython on the other hand uses indentation and columns. The same R code would look like this:\nfor i in range(5): print(“code block 1”) if i &gt; 3: print(“code block 2”) print(“code block 1 again”)\nwhere the indentation is very important as the different indentation levels refer to different execution levels that is a loop or an if statement only affect the indented code not the non- indented code.\n\n\n\nR: Operation can be spread on multiple rows {r} 2 + 3 + 4\noutput: [1] 9\nPython: Operation on multiple rows must be declered either usıng  and ()\n2 + 3 +\n4\nOutput:9\nor\n(2 + 3 + 4)\nOutput:9\n\n\n\nR: Index start’s at 1 , includes last element In R indexing starts at one and ends with the last element in the sequence included.\n{r} for (i in 1:10) { print(i) }\nOutput: [1] 1 [1] 2 [1] 3 [1] 4 [1] 5 [1] 6 [1] 7 [1] 8 [1] 9 [1] 10\nPython: Index start’s at 0 , doesn’t include last element In Python indexing starts at zero and ends without the last element number four functions i\nfor i in range(10) print(i)\nOutput: 0 1 2 3 4 5 6 7 8 9"
  },
  {
    "objectID": "assignments/assignment-1.html#c-import-the-na_example-data-set-from-the-dslabs-package.-your-web-page-should-first-show-the-content-of-na_example-data-set-along-with-its-na-values-and-then-the-total-number-of-nas.-then-replace-all-na-values-in-the-na_example-data-set-with-0-and-store-it-as-a-new-object.-after-making-this-change-print-the-new-data-frame-the-one-without-nas-and-the-total-number-of-nas-in-this-new-data-frame-to-the-page.-include-r-codes-that-will-produce-these-outputs",
    "href": "assignments/assignment-1.html#c-import-the-na_example-data-set-from-the-dslabs-package.-your-web-page-should-first-show-the-content-of-na_example-data-set-along-with-its-na-values-and-then-the-total-number-of-nas.-then-replace-all-na-values-in-the-na_example-data-set-with-0-and-store-it-as-a-new-object.-after-making-this-change-print-the-new-data-frame-the-one-without-nas-and-the-total-number-of-nas-in-this-new-data-frame-to-the-page.-include-r-codes-that-will-produce-these-outputs",
    "title": "Assignment 1",
    "section": "",
    "text": "package ‘dslabs’ successfully unpacked and MD5 sums checked  The downloaded binary packages are in  C:\\Users\\Monster\\AppData\\Local\\Temp\\RtmpUB0tuU\\downloaded_packages \n\n&gt; library(dslabs)\n&gt; data(\"na_example\") \n&gt; cat(\"Original na_example dataset:\\n\") \n\nOriginal na_example dataset: \n&gt; print(na_example)    \n\n[1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2   [23]  2  1  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4   [45]  1  1  2  1  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA   [67]  1 NA  4  1  2  2  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1   [89]  3  1 NA  3  1  2  2  1  2  2  1  1  4  1  1  2  3  3  2  2  3  3  [111]  3  4  1  1  1  2 NA  4  3  4  3  1  2  1 NA NA NA NA  1  5  1  2  [133]  1  3  5  3  2  2 NA NA NA NA  3  5  3  1  1  4  2  4  3  3 NA  2  [155]  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA NA  2  4 NA  2  5  1  4  [177]  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5  2  2  2  3  1  2  [199]  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2  2  1  3  2  [221]  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4 NA  3  [243] NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2  [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1  [287] NA  2  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  [309]  1 NA  2  3  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  [331]  2  1  1  1  3  2  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  [353]  3  2  3  4  1  4  3  1 NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  [375]  3  4  2  1  1  4  2  1  1  1  1  2  1  4  4  1  3 NA  3  3 NA  2  [397] NA  1  2  1  1  4  2  1  4  4 NA  1  2 NA  3  2  2  2  1  4  3  6  [419]  1  2  3  1  3  2  2  2  1  1  3  2  1  1  1  3  2  2 NA  4  4  4  [441]  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3  2  1  4  3 NA  1  [463]  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3  1  2  2  2  [485]  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2 NA  1  [507]  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1  [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  [551]  1  2 NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  [573]  1  5  2 NA  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  [595]  1  2  2  4 NA  6  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  [617]  2 NA  4 NA  1  1  2  2  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  [639]  3  1 NA  1  1  1  1  3  2  4  2  2  3 NA NA  1  4  3  2  2  2  3  [661]  2  4  2  2  4 NA NA NA  6  3  3  1  4  4  2  1 NA  1  6 NA  3  3  [683]  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4  1  3  1  2 NA  1  1  3  [705]  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4  2  2  2  2  4 NA  [727]  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4 NA NA NA NA  [749]  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3  1  2  [771]  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3  [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  [815]  1  5  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  [837]  2 NA  2  1  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2  [859] NA  2  1  3  1  3  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  [881]  2  1  3  2  4  2 NA  3  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  [903]  4  3  2 NA  3  2 NA  1 NA  3  2  1  1  1  2 NA  2  2  3  3  2 NA  [925] NA  4  5  2  2  2  1  2  3  1  3  3  4  3 NA  1  1  1 NA  4  3  5  [947]  1  1  2 NA  2  2  2  2  5  2  2  3  1  2  3 NA  1  2 NA NA  2 NA  [969]  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1  2  4  3  3  3 NA  [991]  1  1  2  2  1  1  2  2 NA  2 \n\n&gt; cat(\"\\nNumber of NAs in the original dataset: \", sum(is.na(na_example)), \"\\n\") \"CHATGPT\"\n\nNumber of NAs in the original dataset:  145 \n\n&gt; na_example_no_na &lt;- na_example &gt; na_example_no_na[is.na(na_example_no_na)] &lt;- 0 \"CHATGPT\"\n\n&gt; cat(\"\\nModified na_example dataset (NAs replaced with 0):\\n\")  \"CHATGPT\"\n\nModified na_example dataset (NAs replaced with 0):\n&gt; print(na_example_no_na)    \n\n[1] 2 1 3 2 1 3 1 4 3 2 2 0 2 2 1 4 0 1 1 2 1 2 2 1 2 5 0 2 2 3 1 2 4   [34] 1 1 1 4 5 2 3 4 1 2 4 1 1 2 1 5 0 0 0 1 1 5 1 3 1 0 4 4 7 3 2 0 0   [67] 1 0 4 1 2 2 3 2 1 2 2 4 3 4 2 3 1 3 2 1 1 1 3 1 0 3 1 2 2 1 2 2 1  [100] 1 4 1 1 2 3 3 2 2 3 3 3 4 1 1 1 2 0 4 3 4 3 1 2 1 0 0 0 0 1 5 1 2  [133] 1 3 5 3 2 2 0 0 0 0 3 5 3 1 1 4 2 4 3 3 0 2 3 2 6 0 1 1 2 2 1 3 1  [166] 1 5 0 0 2 4 0 2 5 1 4 3 3 0 4 3 1 4 1 1 3 1 1 0 0 3 5 2 2 2 3 1 2  [199] 2 3 2 1 0 2 0 1 0 0 2 1 1 0 3 0 1 2 2 1 3 2 2 1 1 2 3 1 1 1 4 3 4  [232] 2 2 1 4 1 0 5 1 4 0 3 0 0 1 1 5 2 3 3 2 4 0 3 2 5 0 2 3 4 6 2 2 2  [265] 0 2 0 2 0 3 3 2 2 4 3 1 4 2 0 2 4 0 6 2 3 1 0 2 2 0 1 1 3 2 3 3 1  [298] 0 1 4 2 1 1 3 2 1 2 3 1 0 2 3 3 2 1 2 3 5 5 1 2 3 3 1 0 0 1 2 4 0  [331] 2 1 1 1 3 2 1 1 3 4 0 1 2 1 1 3 3 0 1 1 3 5 3 2 3 4 1 4 3 1 0 2 1  [364] 2 2 1 2 2 6 1 2 4 5 0 3 4 2 1 1 4 2 1 1 1 1 2 1 4 4 1 3 0 3 3 0 2  [397] 0 1 2 1 1 4 2 1 4 4 0 1 2 0 3 2 2 2 1 4 3 6 1 2 3 1 3 2 2 2 1 1 3  [430] 2 1 1 1 3 2 2 0 4 4 4 1 1 0 4 3 0 1 3 1 3 2 4 2 2 2 3 2 1 4 3 0 1  [463] 4 3 1 3 2 0 3 0 1 3 1 4 1 1 1 2 4 3 1 2 2 2 3 2 3 1 1 0 3 2 1 1 2  [496] 0 2 2 2 3 3 1 1 2 0 1 2 1 1 3 3 1 3 1 1 1 1 1 2 5 1 1 2 2 1 1 0 1  [529] 4 1 2 4 1 3 2 0 1 1 0 2 1 1 4 2 3 3 1 5 3 1 1 2 0 1 1 3 1 3 2 4 0  [562] 2 3 2 1 2 1 1 1 2 2 3 1 5 2 0 2 0 3 2 2 2 1 5 3 2 3 1 0 3 1 2 2 2  [595] 1 2 2 4 0 6 1 2 0 1 1 2 2 3 0 3 2 3 3 4 2 0 2 0 4 0 1 1 2 2 3 1 1  [628] 1 3 0 2 5 0 7 1 0 4 3 3 1 0 1 1 1 1 3 2 4 2 2 3 0 0 1 4 3 2 2 2 3  [661] 2 4 2 2 4 0 0 0 6 3 3 1 4 4 2 1 0 1 6 0 3 3 2 1 1 6 0 1 5 1 0 2 6  [694] 2 0 4 1 3 1 2 0 1 1 3 1 2 4 2 1 3 2 4 3 2 2 1 1 5 6 4 2 2 2 2 4 0  [727] 1 2 2 2 2 4 5 0 0 0 4 3 3 3 2 4 2 4 0 0 0 0 2 1 0 2 4 3 2 0 2 3 1  [760] 3 4 0 1 2 1 2 0 3 1 2 1 2 1 2 1 2 2 2 2 1 1 3 3 1 3 4 3 0 0 4 2 3  [793] 2 1 3 2 4 2 2 3 1 2 4 3 3 4 0 1 4 2 1 1 1 3 1 5 2 2 4 2 0 1 3 1 2  [826] 0 1 2 1 2 1 0 1 3 2 3 2 0 2 1 4 2 0 0 0 2 4 2 0 0 3 1 0 5 5 2 2 2  [859] 0 2 1 3 1 3 2 4 2 4 0 4 1 2 3 2 3 3 2 3 2 2 2 1 3 2 4 2 0 3 3 2 2  [892] 0 0 3 2 1 2 4 1 1 1 1 4 3 2 0 3 2 0 1 0 3 2 1 1 1 2 0 2 2 3 3 2 0  [925] 0 4 5 2 2 2 1 2 3 1 3 3 4 3 0 1 1 1 0 4 3 5 1 1 2 0 2 2 2 2 5 2 2  [958] 3 1 2 3 0 1 2 0 0 2 0 3 1 1 2 5 3 5 1 1 4 0 2 1 3 1 1 2 4 3 3 3 0  [991] 1 1 2 2 1 1 2 2 0 2 \n\n&gt; cat(\"\\nNumber of NAs in the modified dataset: \", sum(is.na(na_example_no_na)), \"\\n\") \n\nNumber of NAs in the modified dataset:  0"
  }
]